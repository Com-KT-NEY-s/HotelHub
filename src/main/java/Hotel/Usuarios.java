/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Hotel;

import Classes.Database;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import static javax.swing.WindowConstants.DISPOSE_ON_CLOSE;
import javax.swing.event.TableModelEvent;
import javax.swing.event.TableModelListener;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author FELIPEEDUARDOMONARI
 */
public class Usuarios extends javax.swing.JFrame {

    private DefaultTableModel tabelaUsuarios = new DefaultTableModel(new Object[]{"ID", "Nome", "Idade", "CPF"}, 0);

    public static void usuarios() {
        JFrame j = new Usuarios();
        j.setVisible(true);
        j.setLocationRelativeTo(null);
        j.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
    }

    public static void quartos() {
        JFrame j = new Quartos();
        j.setVisible(true);
        j.setLocationRelativeTo(null);
        j.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
    }

    public static void reservas() {
        JFrame j = new Reservas();
        j.setVisible(true);
        j.setLocationRelativeTo(null);
        j.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
    }

    public static void hospedes() {
        JFrame j = new Hospedes();
        j.setVisible(true);
        j.setLocationRelativeTo(null);
        j.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
    }

    public static void servicos() {
        JFrame j = new Servicos();
        j.setVisible(true);
        j.setLocationRelativeTo(null);
        j.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
    }

    public static void pagamentos() {
        JFrame j = new Pagamentos();
        j.setVisible(true);
        j.setLocationRelativeTo(null);
        j.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
    }

    public Usuarios() {
        initComponents();
        listaUsuarios();

        tabelaUsuarios.addTableModelListener(new TableModelListener() {
            @Override
            public void tableChanged(TableModelEvent e) {
                if (e.getType() == TableModelEvent.UPDATE) {
                    int row = e.getFirstRow();
                    int column = e.getColumn();

                    if (column == 3) { // CPF está na 4ª coluna (índice 3)
                        String newCpf = (String) tabelaUsuarios.getValueAt(row, column);
                        String originalCpf = (String) tabelaUsuarios.getValueAt(row, column);

                        if (!isValidCPF(newCpf)) {
                            JOptionPane.showMessageDialog(null, "Formato de CPF inválido! O CPF deve estar no formato 'XXX.XXX.XXX-XX'.", "Erro", JOptionPane.ERROR_MESSAGE);

                            // Reverte a alteração
                            tabelaUsuarios.setValueAt(originalCpf, row, column);
                            return; // Para evitar a atualização do usuário
                        }
                    }

                    // Continuação do seu código para editar usuários
                    int id = Integer.parseInt(tabelaUsuarios.getValueAt(row, 0).toString());
                    String nome = (String) tabelaUsuarios.getValueAt(row, 1);
                    String idade = tabelaUsuarios.getValueAt(row, 2).toString();
                    editarUsuarios(nome, idade, (String) tabelaUsuarios.getValueAt(row, 3), id);
                }
            }
        });
    }
    
        // Método para validar o CPF
    private boolean isValidCPF(String cpf) {
        // Remove caracteres não numéricos
        cpf = cpf.replaceAll("[^0-9]", "");
        return cpf.matches("\\d{11}"); // Verifica se tem exatamente 11 dígitos
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jTextNome = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jTextIdade = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jTextCPF = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jBtEnviar = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        JTusuarios = new javax.swing.JTable();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuUsuarios = new javax.swing.JMenuItem();
        jMenuQuartos = new javax.swing.JMenuItem();
        jMenuHospedes = new javax.swing.JMenuItem();
        jMenuReservas = new javax.swing.JMenuItem();
        jMenuServicos = new javax.swing.JMenuItem();
        jMenuPagamentos = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(0, 0, 0));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/logo-hoteozinho.png"))); // NOI18N

        jLabel2.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(247, 151, 29));
        jLabel2.setText("Nome da lenda:");

        jTextNome.setBackground(new java.awt.Color(255, 255, 255));
        jTextNome.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        jTextNome.setForeground(new java.awt.Color(0, 0, 0));
        jTextNome.setText("MONARI GAYLHERME WESLI");

        jLabel3.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(247, 151, 29));
        jLabel3.setText("Idade do sigma:");

        jTextIdade.setBackground(new java.awt.Color(255, 255, 255));
        jTextIdade.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        jTextIdade.setForeground(new java.awt.Color(0, 0, 0));
        jTextIdade.setText("69");

        jLabel4.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(247, 151, 29));
        jLabel4.setText("CPF: ");

        jTextCPF.setBackground(new java.awt.Color(255, 255, 255));
        jTextCPF.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        jTextCPF.setForeground(new java.awt.Color(0, 0, 0));
        jTextCPF.setText("123.456.789-10");
        jTextCPF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextCPFActionPerformed(evt);
            }
        });

        jButton1.setBackground(new java.awt.Color(247, 151, 29));
        jButton1.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jButton1.setForeground(new java.awt.Color(0, 0, 0));
        jButton1.setText("Reset");

        jBtEnviar.setBackground(new java.awt.Color(247, 151, 29));
        jBtEnviar.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jBtEnviar.setForeground(new java.awt.Color(0, 0, 0));
        jBtEnviar.setText("Enviar");
        jBtEnviar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtEnviarActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Arial", 3, 48)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(247, 151, 29));
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("USUÁRIOS");

        JTusuarios.setModel(tabelaUsuarios);
        jScrollPane1.setViewportView(JTusuarios);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel1))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(277, Short.MAX_VALUE)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 471, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(279, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTextCPF)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextNome)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextIdade, javax.swing.GroupLayout.PREFERRED_SIZE, 471, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jBtEnviar)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 433, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(27, Short.MAX_VALUE)
                .addComponent(jLabel5)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextNome, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jTextIdade, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jTextCPF, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton1)
                            .addComponent(jBtEnviar)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 10, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 29, Short.MAX_VALUE)
                .addComponent(jLabel1))
        );

        jMenuBar1.setBackground(new java.awt.Color(255, 102, 0));
        jMenuBar1.setForeground(new java.awt.Color(255, 102, 0));

        jMenu1.setText("File");

        jMenuUsuarios.setText("Usuários");
        jMenuUsuarios.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuUsuariosActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuUsuarios);

        jMenuQuartos.setText("Quartos");
        jMenuQuartos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuQuartosActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuQuartos);

        jMenuHospedes.setText("Hóspedes");
        jMenuHospedes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuHospedesActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuHospedes);

        jMenuReservas.setText("Reservas");
        jMenuReservas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuReservasActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuReservas);

        jMenuServicos.setText("Serviços");
        jMenuServicos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuServicosActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuServicos);

        jMenuPagamentos.setText("Pagamentos");
        jMenuPagamentos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuPagamentosActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuPagamentos);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuUsuariosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuUsuariosActionPerformed
        usuarios();
    }//GEN-LAST:event_jMenuUsuariosActionPerformed

    private void jMenuQuartosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuQuartosActionPerformed
        quartos();
    }//GEN-LAST:event_jMenuQuartosActionPerformed

    private void jMenuHospedesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuHospedesActionPerformed
        hospedes();
    }//GEN-LAST:event_jMenuHospedesActionPerformed

    private void jMenuReservasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuReservasActionPerformed
        reservas();
    }//GEN-LAST:event_jMenuReservasActionPerformed

    private void jMenuServicosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuServicosActionPerformed
        servicos();
    }//GEN-LAST:event_jMenuServicosActionPerformed

    private void jMenuPagamentosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuPagamentosActionPerformed
        pagamentos();
    }//GEN-LAST:event_jMenuPagamentosActionPerformed

    private void jTextCPFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextCPFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextCPFActionPerformed

    private void jBtEnviarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtEnviarActionPerformed
        Integer print = JOptionPane.showConfirmDialog(rootPane,
                "Deseja adicionar esse Usuário?"
        );
        if (print == JOptionPane.YES_OPTION) {
            JOptionPane.showMessageDialog(rootPane, "Usuário Adicionado");
            inserirUsuario();
            this.setVisible(false);

        } else if (print == JOptionPane.NO_OPTION || print == JOptionPane.CANCEL_OPTION) {
            JOptionPane.showMessageDialog(rootPane, "Usuário Não Adicionado");
        }
    }//GEN-LAST:event_jBtEnviarActionPerformed

    public void inserirUsuario() {
        String nome = jTextNome.getText();
        String idade = jTextIdade.getText();
        String cpf = jTextCPF.getText();

        Connection conn = Database.getConnection();
        try {
            PreparedStatement stmt = conn.prepareStatement("INSERT INTO usuarios (nome, idade, cpf) VALUES (?, ?, ?)");

            stmt.setString(1, nome);
            stmt.setString(2, idade);
            stmt.setString(3, cpf);

            stmt.execute();

        } catch (SQLException ex) {
            Logger.getLogger(Usuarios.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public void listaUsuarios() {
        Connection conn = Database.getConnection();
        PreparedStatement stmt = null;
        ResultSet rs = null;

        try {
            String sql = "SELECT id_usuario, nome, idade, cpf FROM usuarios";
            stmt = conn.prepareStatement(sql);
            rs = stmt.executeQuery();

            DefaultTableModel model = (DefaultTableModel) JTusuarios.getModel();

            model.setRowCount(0);

            while (rs.next()) {
                String id = rs.getString("id_usuario");
                String nome = rs.getString("nome");
                String idade = rs.getString("idade");
                String cpf = rs.getString("cpf");
                model.addRow(new Object[]{id, nome, idade, cpf});
            }

        } catch (Exception e) {
            e.printStackTrace();
        } finally {
            try {
                if (rs != null) {
                    rs.close();
                }
                if (stmt != null) {
                    stmt.close();
                }
                if (conn != null) {
                    conn.close();
                }
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
    }

    public void editarUsuarios(String nome, String idade, String cpf, int id) {
        try (Connection conn = Database.getConnection()) {  // Obtém conexão com o banco
            String query = "UPDATE usuarios SET nome = ?, idade = ?, cpf = ? WHERE id_usuario = ?";  // SQL com placeholders
            PreparedStatement stmt = conn.prepareStatement(query);
            stmt.setString(1, nome);  // Define o valor do primeiro placeholder (sabor)
            stmt.setString(2, idade);  // Converte preco para double e define o segundo placeholder
            stmt.setString(3, cpf); // Define o valor do terceiro placeholder (id)
            stmt.setInt(4, id);

            stmt.executeUpdate();  // Executa a query
        } catch (Exception ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(null, "Erro ao salvar no banco de dados: " + ex.getMessage());
        }
    }

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Usuarios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Usuarios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Usuarios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Usuarios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Usuarios().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable JTusuarios;
    private javax.swing.JButton jBtEnviar;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuHospedes;
    private javax.swing.JMenuItem jMenuPagamentos;
    private javax.swing.JMenuItem jMenuQuartos;
    private javax.swing.JMenuItem jMenuReservas;
    private javax.swing.JMenuItem jMenuServicos;
    private javax.swing.JMenuItem jMenuUsuarios;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextCPF;
    private javax.swing.JTextField jTextIdade;
    private javax.swing.JTextField jTextNome;
    // End of variables declaration//GEN-END:variables
}
